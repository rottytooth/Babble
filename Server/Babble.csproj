<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net9.0</TargetFramework>
    <Nullable>enable</Nullable>
    <ImplicitUsings>enable</ImplicitUsings>
    
    <!-- Version configuration -->
    <VersionMajor>0</VersionMajor>
    <VersionMinor>4</VersionMinor>
    <!-- Use days since 2024-01-01 as patch version for auto-increment -->
    <VersionPatch>$([System.Math]::Floor($([System.DateTime]::Now.Subtract($([System.DateTime]::Parse("2024-01-01"))).TotalDays)))</VersionPatch>
    <!-- Use minutes since midnight as revision for build uniqueness -->
    <VersionRevision>$([System.Math]::Floor($([System.DateTime]::Now.TimeOfDay.TotalMinutes)))</VersionRevision>
    <AssemblyVersion>$(VersionMajor).$(VersionMinor).$(VersionPatch).$(VersionRevision)</AssemblyVersion>
    <FileVersion>$(AssemblyVersion)</FileVersion>
    <Version>$(VersionMajor).$(VersionMinor).$(VersionPatch)</Version>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.OpenApi" Version="9.0.4" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="9.0.0" />
    <PackageReference Include="Microsoft.Data.Sqlite" Version="9.0.0" />
  </ItemGroup>

  <Target Name="BuildClojureExecutor" BeforeTargets="CopyParserFiles">
    <!-- Check if npm is available -->
    <Exec Command="npm --version" IgnoreExitCode="true" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="NpmExitCode" />
    </Exec>
    
    <!-- Only build ClojureScript if npm is available -->
    <Exec Condition="'$(NpmExitCode)' == '0'" 
          Command="npm run release" 
          WorkingDirectory="../ClojureExecutor" 
          IgnoreExitCode="true"
          ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ClojureExecutorBuildExitCode" />
    </Exec>
    
    <Message Condition="'$(NpmExitCode)' != '0'" 
             Text="Skipping ClojureScript Executor build: npm not found. Install Node.js and npm to enable ClojureScript compilation." 
             Importance="high" />
    <Message Condition="'$(NpmExitCode)' == '0' AND '$(ClojureExecutorBuildExitCode)' != '0'" 
             Text="ClojureScript Executor build encountered issues but continuing. Check ClojureExecutor/README.md for setup instructions." 
             Importance="high" />
    <Message Condition="'$(ClojureExecutorBuildExitCode)' == '0'" 
             Text="ClojureScript Executor compiled successfully to wwwroot/executor/" 
             Importance="high" />
  </Target>

  <Target Name="CopyParserFiles" BeforeTargets="Build">
    <ItemGroup>
      <ParserFiles Include="../Parser/**/*" Exclude="../Parser/tests/**/*" />
    </ItemGroup>
    <Copy SourceFiles="@(ParserFiles)" DestinationFolder="wwwroot/parser/%(RecursiveDir)" SkipUnchangedFiles="true" />
  </Target>

  <Target Name="CleanParserFiles" BeforeTargets="Clean">
    <RemoveDir Directories="wwwroot/parser" />
  </Target>

  <Target Name="CleanClojureExecutor" BeforeTargets="Clean">
    <RemoveDir Directories="wwwroot/executor" />
  </Target>

</Project>
